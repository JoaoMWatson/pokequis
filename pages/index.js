import Head from "next/head";
import InputArea from "../components/inputArea";
import QuestionArea from "../components/questionArea";
import Score from "../components/score";
import Modal from "../components/modal";

import { NextButton, InputContainer } from "../styles/styles";
import { useState, useEffect } from "react";

import perguntas from "./api/questions";

export default function Home() {
  let score = [
    { question: "current" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
    { question: "" },
  ];

  const [pergunta, setPergunta] = useState(perguntas[0]);
  const [checked, setChecked] = useState([false, false, false, false]);
  const [count, setCount] = useState(0);
  const [inputValue, setInputValue] = useState("");
  const [finished, setFinished] = useState(false);
  const [points, setPoints] = useState(0);

  useEffect(() => {
    if (typeof window !== "undefined") {
      localStorage.setItem("score", JSON.stringify(score));
    }
  }, []);

  const onclickHandler = (e) => {
    setCount(count + 1);
  };

  useEffect(() => {
    if (count + 1 <= perguntas.length) {
      setChecked([false, false, false, false]);
      let actualScore = "";

      setPergunta(perguntas[count]);

      let scoreStorage = JSON.parse(localStorage.getItem("score") || 0);

      scoreStorage[count].question = "current";

      if (inputValue.toLowerCase() === pergunta.resposta.toLowerCase()) {
        actualScore = "correct";
      } else {
        actualScore = "fail";
      }

      switch (actualScore) {
        case "fail":
          scoreStorage[pergunta.key - 1].question = "fail";
          localStorage.setItem("score", JSON.stringify(scoreStorage));
          break;
        case "correct":
          scoreStorage[pergunta.key - 1].question = "correct";
          localStorage.setItem("score", JSON.stringify(scoreStorage));
          break;
        default:
          scoreStorage[pergunta.key - 1].question = "";
          localStorage.setItem("score", JSON.stringify(scoreStorage));
          break;
      }

      if (count === 0) scoreStorage[0].question = "current";

      localStorage.setItem("score", JSON.stringify(scoreStorage));
    } else {
      let soma = 0;

      if (inputValue.toLowerCase() === pergunta.resposta.toLowerCase()) {
        soma++;
      } else {
        soma = 0;
      }
      let scoreTotal = JSON.parse(localStorage.getItem("score") || 0);
      scoreTotal.forEach((score) => {
        if (score.question === "correct") soma += 1;
      });
      setPoints(soma);
      setFinished(true);
    }
  }, [count]);

  const onClose = () => {
    localStorage.setItem("score", JSON.stringify(score));
    setPoints(0);
    setCount(0);
    setPergunta(perguntas[0]);
    setChecked([false, false, false, false]);
    setInputValue("");
    setFinished(false);
  };

  return (
    <>
      <Head>
        <title>PokeQuis :D </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Score count={pergunta.key} />
      <div className="container">
        <InputContainer>
          <InputArea
            label={pergunta.options[0]}
            onClick={(e) => {
              setChecked([true, false, false, false]);
              setInputValue(String(e.target.value));
            }}
            isChecked={checked[0]}
          />
          <InputArea
            label={pergunta.options[1]}
            onClick={(e) => {
              setChecked([false, true, false, false]);
              setInputValue(String(e.target.value));
            }}
            isChecked={checked[1]}
          />
          <InputArea
            label={pergunta.options[2]}
            onClick={(e) => {
              setChecked([false, false, true, false]);
              setInputValue(String(e.target.value));
            }}
            isChecked={checked[2]}
          />
          <InputArea
            label={pergunta.options[3]}
            onClick={(e) => {
              setChecked([false, false, false, true]);
              setInputValue(String(e.target.value));
            }}
            isChecked={checked[3]}
          />
          <NextButton
            type="button"
            onClick={(e) => {
              onclickHandler(e);
            }}
          >
            Confirmar
          </NextButton>
        </InputContainer>
        <QuestionArea pergunta={pergunta.pergunta} image={pergunta.key - 1} />
        {finished && <Modal initialState points={points} onClose={onClose} />}
      </div>
    </>
  );
}
